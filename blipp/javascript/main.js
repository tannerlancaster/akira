// ======================================================// =                        BLIPP                       =// ======================================================var blipp = require('blippar').blipp;blipp.getPeel().setOrientation('landscape')		.setType('fit')		.setScale(30)		.setOffset(0, 0)		.setSize(100, 200);// ======================================================// =                        SCENE                       =// ======================================================var scene = blipp.addScene('default');var mW = blipp.getMarker().getWidth();var mH = blipp.getMarker().getHeight();var sW = blipp.getScreenWidth();var sH = blipp.getScreenHeight();var models = require('./PSD2BlippOutput.js').initialise(scene, sW, sH, mW, mH);var whichModelTapped = null;scene.setRequiredAssets([	'akira_audio.ogg',	'akira_vid.mp4']);scene.on('create', function() {	scene.setAlphaZero(models.characterGroup);	scene.setAlphaZero(models.textGroup);	scene.setAlphaZero(models.textBgGroup);	models.characterGroup.forEach(function (allimages) {		allimages.setClickable(false);	});	//fade in background text and background	models.characterGroup.forEach(function (model) {		model.on('touchEnd', function () {			if (whichModelTapped === null) {				var bgAnim = models.infoBg.animate().alpha(1).delay(0).duration(1000);				bgAnim.on('start', function () {						models.infoBg.setHidden(false);				});				bgAnim.on('end',function () {					typeWriter(model.textString, 0);				});				whichModelTapped = model;				console.log('______ model ' + whichModelTapped.getName());			} else {				clearTimeout(scene.typeWriterTimeout);				models.infoBg.textLayer.destroy();				models.infoBg.animate().alpha(0).delay(0).duration(1000);				whichModelTapped.backgroundText.animate().alpha(0).delay(0).duration(1000).on('end', function () {						var bgAnim = models.infoBg.animate().alpha(1).delay(0).duration(1000);						bgAnim.on('start', function () {								models.infoBg.setHidden(false);						});						bgAnim.on('end',function () {							typeWriter(model.textString, 0);						});						whichModelTapped = model;				});			};		});	});});scene.on('show', function() {	console.log('onShow Called');	scene.applyToDescendants('setType', 'phantom');	scene.goToIntro();});scene.goToIntro = function() {	// models.oup.forEach(function(chargrp) {	// 	chargrp.fadeIn(2500, 0, 'easeInOut');	// });	playAkiraVideo();	scene.fadeInGroup(models.characterGroup, 1000);	scene.fadeInGroup(models.textGroup, 3000);	scene.fadeInGroup(models.textBgGroup, 2000);
	console.log('----------------------grabbbbasdf');
	models.characterGroup.forEach(function(model){		model	});};// ======================================================// =                    FUNCTIONS                       =// ======================================================function playAkiraVideo () {	// makeClickable();	models.videoPlane.setClickable(true);	models.videoPlane.animate().alpha(1).delay(0).duration(1000);	models.videoPlane.playVideo('akira_vid.mp4', 'akira_audio.ogg', false, false, false);	models.videoPlane.on('videoTextureEnd', function () {	// 	models.videoPlane.animate().alpha(0).delay(0).duration(1000)	// 		.on('end', function () {	// 				models.videoPlane.destroy();	// 		});	});};// function makeClickable () {// 	models.characterGroup.forEach(function (model) {// 		model.setClickable(true);// 	});// };scene.setAlphaZero = function (group) {	group.forEach(function (element) {		element.setAlpha(0);	});};scene.fadeInGroup = function(group, delayTime) {	group.forEach(function (element) {		element.setHidden(false);		element.animate().delay(delayTime).duration(1000).alpha(1).interpolator('easeInOut');	});};//typewrite functionfunction typeWriter(text, letter) {	// console.log(text)	if (letter === 0) {	  models.infoBg.textLayer = models.infoBg.addText(text)		.setName('text')		.setAlpha(0)		.setColor(0, 0, 0)		.setWidth(sW*0.700)		.setHidden(false);	}  if (letter < (text.length+2)) {  	models.infoBg.textLayer.setText(text.substring(0, letter+1))		.setAlpha(1);    letter+=2;    scene.typeWriterTimeout = setTimeout(function() {      typeWriter(text, letter)    }, 30);  }};